"""
–ö–ª–∞–≤–∏–∞—Ç—É—Ä—ã –¥–ª—è –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –ø—Ä–æ—Ñ–∏–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è.
"""

import logging
from aiogram.types import InlineKeyboardMarkup, InlineKeyboardButton
from aiogram.utils.keyboard import InlineKeyboardBuilder
from database_manager import DatabaseManager

# –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è
logger = logging.getLogger(__name__)


def get_settings_keyboard() -> InlineKeyboardMarkup:
    """
    –°–æ–∑–¥–∞–Ω–∏–µ –∏–Ω–ª–∞–π–Ω-–∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã –¥–ª—è –º–µ–Ω—é –Ω–∞—Å—Ç—Ä–æ–µ–∫.

    Returns:
        InlineKeyboardMarkup: –ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ —Å –∫–Ω–æ–ø–∫–∞–º–∏ –Ω–∞—Å—Ç—Ä–æ–µ–∫
    """
    try:
        keyboard_builder = InlineKeyboardBuilder()

        # –î–æ–±–∞–≤–ª—è–µ–º –∫–Ω–æ–ø–∫–∏ –Ω–∞—Å—Ç—Ä–æ–µ–∫
        keyboard_builder.add(
            InlineKeyboardButton(
                text="üè´ –ò–∑–º–µ–Ω–∏—Ç—å —Ñ–∞–∫—É–ª—å—Ç–µ—Ç",
                callback_data="settings_faculty"
            )
        )

        keyboard_builder.add(
            InlineKeyboardButton(
                text="üë• –ò–∑–º–µ–Ω–∏—Ç—å –≥—Ä—É–ø–ø—É",
                callback_data="settings_group"
            )
        )

        keyboard_builder.add(
            InlineKeyboardButton(
                text="üìù –ò–∑–º–µ–Ω–∏—Ç—å –Ω–æ–º–µ—Ä –∑–∞—á–µ—Ç–∫–∏",
                callback_data="settings_record_book"
            )
        )

        keyboard_builder.add(
            InlineKeyboardButton(
                text="üîî –ù–∞—Å—Ç—Ä–æ–π–∫–∞ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π",
                callback_data="settings_notifications"
            )
        )

        # –ö–Ω–æ–ø–∫–∞ –≤–æ–∑–≤—Ä–∞—Ç–∞ –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é
        keyboard_builder.add(
            InlineKeyboardButton(
                text="üè† –í–µ—Ä–Ω—É—Ç—å—Å—è –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é",
                callback_data="settings_back"
            )
        )

        # –†–∞–∑–º–µ—â–∞–µ–º –∫–Ω–æ–ø–∫–∏ –≤ –æ–¥–Ω—É –∫–æ–ª–æ–Ω–∫—É
        keyboard_builder.adjust(1)

        return keyboard_builder.as_markup()

    except Exception as e:
        logger.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ –∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã –Ω–∞—Å—Ç—Ä–æ–µ–∫: {e}")
        return InlineKeyboardBuilder().as_markup()


async def get_faculty_settings_keyboard(db_manager: DatabaseManager) -> InlineKeyboardMarkup:
    """
    –°–æ–∑–¥–∞–Ω–∏–µ –∏–Ω–ª–∞–π–Ω-–∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã –¥–ª—è –≤—ã–±–æ—Ä–∞ —Ñ–∞–∫—É–ª—å—Ç–µ—Ç–∞ –≤ –Ω–∞—Å—Ç—Ä–æ–π–∫–∞—Ö.

    Args:
        db_manager: –ú–µ–Ω–µ–¥–∂–µ—Ä –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö

    Returns:
        InlineKeyboardMarkup: –ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ —Å –∫–Ω–æ–ø–∫–∞–º–∏ —Ñ–∞–∫—É–ª—å—Ç–µ—Ç–æ–≤
    """
    try:
        keyboard_builder = InlineKeyboardBuilder()

        # –ü–æ–ª—É—á–∞–µ–º —Å–ø–∏—Å–æ–∫ —Ñ–∞–∫—É–ª—å—Ç–µ—Ç–æ–≤ –∏–∑ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö
        faculties = db_manager.get_faculties()

        if not faculties:
            logger.warning("–ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å —Å–ø–∏—Å–æ–∫ —Ñ–∞–∫—É–ª—å—Ç–µ—Ç–æ–≤ –∏–∑ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö")
            # –î–æ–±–∞–≤–ª—è–µ–º —Ç–æ–ª—å–∫–æ –∫–Ω–æ–ø–∫—É "–ù–∞–∑–∞–¥"
            keyboard_builder.add(
                InlineKeyboardButton(
                    text="¬´ –ù–∞–∑–∞–¥",
                    callback_data="faculty_settings_back"
                )
            )
            return keyboard_builder.as_markup()

        # –î–æ–±–∞–≤–ª—è–µ–º –∫–Ω–æ–ø–∫–∏ –¥–ª—è –∫–∞–∂–¥–æ–≥–æ —Ñ–∞–∫—É–ª—å—Ç–µ—Ç–∞
        for faculty in faculties:
            keyboard_builder.add(
                InlineKeyboardButton(
                    text=faculty['name'],
                    callback_data=f"faculty_settings_{faculty['id']}"
                )
            )

        # –î–æ–±–∞–≤–ª—è–µ–º –∫–Ω–æ–ø–∫—É "–ù–∞–∑–∞–¥"
        keyboard_builder.add(
            InlineKeyboardButton(
                text="¬´ –ù–∞–∑–∞–¥",
                callback_data="faculty_settings_back"
            )
        )

        # –†–∞–∑–º–µ—â–∞–µ–º –∫–Ω–æ–ø–∫–∏ –≤ –æ–¥–Ω—É –∫–æ–ª–æ–Ω–∫—É
        keyboard_builder.adjust(1)

        return keyboard_builder.as_markup()

    except Exception as e:
        logger.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ –∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã –≤—ã–±–æ—Ä–∞ —Ñ–∞–∫—É–ª—å—Ç–µ—Ç–∞: {e}")
        return InlineKeyboardBuilder().as_markup()


async def get_group_settings_keyboard(db_manager: DatabaseManager, faculty_id: str) -> InlineKeyboardMarkup:
    """
    –°–æ–∑–¥–∞–Ω–∏–µ –∏–Ω–ª–∞–π–Ω-–∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã –¥–ª—è –≤—ã–±–æ—Ä–∞ –≥—Ä—É–ø–ø—ã –≤ –Ω–∞—Å—Ç—Ä–æ–π–∫–∞—Ö.

    Args:
        db_manager: –ú–µ–Ω–µ–¥–∂–µ—Ä –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö
        faculty_id: ID —Ñ–∞–∫—É–ª—å—Ç–µ—Ç–∞

    Returns:
        InlineKeyboardMarkup: –ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ —Å –∫–Ω–æ–ø–∫–∞–º–∏ –≥—Ä—É–ø–ø
    """
    try:
        keyboard_builder = InlineKeyboardBuilder()

        # –ü–æ–ª—É—á–∞–µ–º —Å–ø–∏—Å–æ–∫ –≥—Ä—É–ø–ø –¥–ª—è —Ñ–∞–∫—É–ª—å—Ç–µ—Ç–∞ –∏–∑ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö
        groups = db_manager.get_groups(faculty_id)

        if not groups:
            logger.warning(f"–ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å —Å–ø–∏—Å–æ–∫ –≥—Ä—É–ø–ø –¥–ª—è —Ñ–∞–∫—É–ª—å—Ç–µ—Ç–∞ {faculty_id} –∏–∑ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö")
            # –î–æ–±–∞–≤–ª—è–µ–º —Ç–æ–ª—å–∫–æ –∫–Ω–æ–ø–∫—É "–ù–∞–∑–∞–¥"
            keyboard_builder.add(
                InlineKeyboardButton(
                    text="¬´ –ù–∞–∑–∞–¥",
                    callback_data="group_settings_back"
                )
            )
            return keyboard_builder.as_markup()

        # –î–æ–±–∞–≤–ª—è–µ–º –∫–Ω–æ–ø–∫–∏ –¥–ª—è –∫–∞–∂–¥–æ–π –≥—Ä—É–ø–ø—ã
        for group in groups:
            keyboard_builder.add(
                InlineKeyboardButton(
                    text=group['name'],
                    callback_data=f"group_settings_{group['id']}"
                )
            )

        # –î–æ–±–∞–≤–ª—è–µ–º –∫–Ω–æ–ø–∫—É "–ù–∞–∑–∞–¥"
        keyboard_builder.add(
            InlineKeyboardButton(
                text="¬´ –ù–∞–∑–∞–¥",
                callback_data="group_settings_back"
            )
        )

        # –†–∞–∑–º–µ—â–∞–µ–º –∫–Ω–æ–ø–∫–∏ –≤ –¥–≤–µ –∫–æ–ª–æ–Ω–∫–∏, –∫—Ä–æ–º–µ –∫–Ω–æ–ø–∫–∏ "–ù–∞–∑–∞–¥"
        keyboard_builder.adjust(2, 2, 1)

        return keyboard_builder.as_markup()

    except Exception as e:
        logger.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ –∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã –≤—ã–±–æ—Ä–∞ –≥—Ä—É–ø–ø—ã: {e}")
        return InlineKeyboardBuilder().as_markup()


def get_notification_settings_keyboard(notify_enabled: bool = True) -> InlineKeyboardMarkup:
    """
    –°–æ–∑–¥–∞–Ω–∏–µ –∏–Ω–ª–∞–π–Ω-–∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã –¥–ª—è –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π.

    Args:
        notify_enabled: –¢–µ–∫—É—â–µ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π (–≤–∫–ª—é—á–µ–Ω—ã/–≤—ã–∫–ª—é—á–µ–Ω—ã)

    Returns:
        InlineKeyboardMarkup: –ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ —Å –∫–Ω–æ–ø–∫–∞–º–∏ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π
    """
    try:
        keyboard_builder = InlineKeyboardBuilder()

        # –î–æ–±–∞–≤–ª—è–µ–º –∫–Ω–æ–ø–∫–∏ –≤–∫–ª—é—á–µ–Ω–∏—è/–≤—ã–∫–ª—é—á–µ–Ω–∏—è —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π
        keyboard_builder.add(
            InlineKeyboardButton(
                text="üîî –í–∫–ª—é—á–∏—Ç—å —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è" if not notify_enabled else "üîî –£–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –≤–∫–ª—é—á–µ–Ω—ã",
                callback_data="notifications_enable"
            )
        )

        keyboard_builder.add(
            InlineKeyboardButton(
                text="üîï –û—Ç–∫–ª—é—á–∏—Ç—å —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è" if notify_enabled else "üîï –£–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –æ—Ç–∫–ª—é—á–µ–Ω—ã",
                callback_data="notifications_disable"
            )
        )

        # –î–æ–±–∞–≤–ª—è–µ–º –∫–Ω–æ–ø–∫—É "–ù–∞–∑–∞–¥"
        keyboard_builder.add(
            InlineKeyboardButton(
                text="¬´ –ù–∞–∑–∞–¥",
                callback_data="notifications_back"
            )
        )

        # –†–∞–∑–º–µ—â–∞–µ–º –∫–Ω–æ–ø–∫–∏ –≤ –æ–¥–Ω—É –∫–æ–ª–æ–Ω–∫—É
        keyboard_builder.adjust(1)

        return keyboard_builder.as_markup()

    except Exception as e:
        logger.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ –∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π: {e}")
        return InlineKeyboardBuilder().as_markup()